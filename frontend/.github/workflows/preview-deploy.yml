name: Preview Deploy

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    environment: staging

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: GitHub Refs
        uses: rlespinasse/github-slug-action@v3.x

      - name: Cache Node Modules & Next Build
        id: cache-node-modules-next
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Run Build
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Serverless Deploy
        id: serverless_deploy
        run: npx sls --stage ${{ env.GITHUB_EVENT_REF_SLUG_URL }}
        #env:
        #  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
